{"remainingRequest":"/home/lifechoices/Documents/Blog-Front-End/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/lifechoices/Documents/Blog-Front-End/src/views/Blogs.vue?vue&type=template&id=e28aca72","dependencies":[{"path":"/home/lifechoices/Documents/Blog-Front-End/src/views/Blogs.vue","mtime":1646135413961},{"path":"/home/lifechoices/Documents/Blog-Front-End/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lifechoices/Documents/Blog-Front-End/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lifechoices/Documents/Blog-Front-End/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/lifechoices/Documents/Blog-Front-End/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lifechoices/Documents/Blog-Front-End/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiB2LWlmPSJibG9ncyI+CiAgICA8aDI+QmxvZ3M8L2gyPgogICAgPGRpdiBjbGFzcz0iYmxvZ3MtY29udGFpbmVyIiB2LWlmPSJibG9ncyI+CiAgICAgIDxyb3V0ZXItbGluawogICAgICAgIHYtZm9yPSJibG9nIG9mIGJsb2dzIgogICAgICAgIDprZXk9ImJsb2cuX2lkIgogICAgICAgIDp0bz0ieyBuYW1lOiAnQmxvZ0RldGFpbHMnLCBwYXJhbXM6IHsgaWQ6IGJsb2cuX2lkIH0gfSIKICAgICAgPgogICAgICAgIDxpbWcgOnNyYz0iYmxvZy5pbWciIDphbHQ9ImJsb2cudGl0bGUiIC8+CiAgICAgICAge3sgYmxvZy5hdXRob3JfbmFtZSB9fQogICAgICA8L3JvdXRlci1saW5rPgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdiB2LWVsc2U+TG9hZGluZyBibG9ncy4uLjwvZGl2Pgo="},{"version":3,"sources":["/home/lifechoices/Documents/Blog-Front-End/src/views/Blogs.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACxD;QACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACxC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/lifechoices/Documents/Blog-Front-End/src/views/Blogs.vue","sourceRoot":"","sourcesContent":["<template>\n  <div v-if=\"blogs\">\n    <h2>Blogs</h2>\n    <div class=\"blogs-container\" v-if=\"blogs\">\n      <router-link\n        v-for=\"blog of blogs\"\n        :key=\"blog._id\"\n        :to=\"{ name: 'BlogDetails', params: { id: blog._id } }\"\n      >\n        <img :src=\"blog.img\" :alt=\"blog.title\" />\n        {{ blog.author_name }}\n      </router-link>\n    </div>\n  </div>\n  <div v-else>Loading blogs...</div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      blogs: null,\n    };\n  },\n  mounted() {\n    if (localStorage.getItem(\"jwt\")) {\n      fetch(\"https://generic-blog-api.herokuapp.com/posts\", {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        },\n      })\n        .then((response) => response.json())\n        .then((json) => {\n          this.blogs = json;\n          this.blogs.forEach(async (blog) => {\n            await fetch(\n              \"https://generic-blog-api.herokuapp.com/users/\" + blog.author,\n              {\n                method: \"GET\",\n                headers: {\n                  \"Content-type\": \"application/json; charset=UTF-8\",\n                  Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n                },\n              }\n            )\n              .then((response) => response.json())\n              .then((json) => {\n                blog.author_name = json.name;\n              });\n          });\n        })\n        .catch((err) => {\n          alert(\"User not logged in\");\n        });\n    } else {\n      alert(\"User not logged in\");\n      this.$router.push({ name: \"Login\" });\n    }\n  },\n};\n</script>\n<style>\n.blogs-container {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-inline: auto;\n  padding: 30px;\n  gap: 2%;\n  justify-content: stretch;\n  align-items: stretch;\n  flex-direction: column;\n}\n\nimg {\n  max-width: 50vw;\n}\n</style>\n"]}]}